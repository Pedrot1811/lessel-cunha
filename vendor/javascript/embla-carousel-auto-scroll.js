// embla-carousel-auto-scroll@8.6.0 downloaded from https://ga.jspm.io/npm:embla-carousel-auto-scroll@8.6.0/esm/embla-carousel-auto-scroll.esm.js

const t={direction:"forward",speed:2,startDelay:1e3,active:true,breakpoints:{},playOnInit:true,stopOnFocusIn:true,stopOnInteraction:true,stopOnMouseEnter:false,rootNode:null};function getAutoScrollRootNode(t,o){const e=t.rootNode();return o&&o(e)||e}function AutoScroll(o={}){let e;let n;let r;let s;let l=0;let i=false;let c=false;let u;function init(l,i){n=l;const{mergeOptions:c,optionsAtMedia:a}=i;const p=c(t,AutoScroll.globalOptions);const f=c(p,o);e=a(f);if(n.scrollSnapList().length<=1)return;s=e.startDelay;r=false;u=n.internalEngine().scrollBody;const{eventStore:d}=n.internalEngine();const S=!!n.internalEngine().options.watchDrag;const A=getAutoScrollRootNode(n,e.rootNode);S&&n.on("pointerDown",pointerDown);S&&!e.stopOnInteraction&&n.on("pointerUp",pointerUp);e.stopOnMouseEnter&&d.add(A,"mouseenter",mouseEnter);e.stopOnMouseEnter&&!e.stopOnInteraction&&d.add(A,"mouseleave",mouseLeave);e.stopOnFocusIn&&n.on("slideFocusStart",stopAutoScroll);e.stopOnFocusIn&&!e.stopOnInteraction&&d.add(n.containerNode(),"focusout",startAutoScroll);e.playOnInit&&startAutoScroll()}function destroy(){n.off("pointerDown",pointerDown).off("pointerUp",pointerUp).off("slideFocusStart",stopAutoScroll).off("settle",settle);stopAutoScroll();r=true;i=false}function startAutoScroll(){if(r)return;if(i)return;n.emit("autoScroll:play");const t=n.internalEngine();const{ownerWindow:o}=t;l=o.setTimeout((()=>{t.scrollBody=createAutoScrollBehaviour(t);t.animation.start()}),s);i=true}function stopAutoScroll(){if(r)return;if(!i)return;n.emit("autoScroll:stop");const t=n.internalEngine();const{ownerWindow:o}=t;t.scrollBody=u;o.clearTimeout(l);l=0;i=false}function createAutoScrollBehaviour(t){const{location:o,previousLocation:r,offsetLocation:s,target:l,scrollTarget:i,index:c,indexPrevious:u,limit:{reachedMin:a,reachedMax:p,constrain:f},options:{loop:d}}=t;const S=e.direction==="forward"?-1:1;const noop=()=>w;let A=0;let g=0;let y=o.get();let O=0;let m=false;function seek(){let t=0;r.set(o);A=S*e.speed;y+=A;o.add(A);l.set(o);t=y-O;g=Math.sign(t);O=y;const v=i.byDistance(0,false).index;if(c.get()!==v){u.set(c.get());c.set(v);n.emit("select")}const D=e.direction==="forward"?a(s.get()):p(s.get());if(!d&&D){m=true;const t=f(o.get());o.set(t);l.set(o);stopAutoScroll()}return w}const w={direction:()=>g,duration:()=>-1,velocity:()=>A,settled:()=>m,seek:seek,useBaseFriction:noop,useBaseDuration:noop,useFriction:noop,useDuration:noop};return w}function pointerDown(){c||stopAutoScroll()}function pointerUp(){c||startAutoScrollOnSettle()}function mouseEnter(){c=true;stopAutoScroll()}function mouseLeave(){c=false;startAutoScroll()}function settle(){n.off("settle",settle);startAutoScroll()}function startAutoScrollOnSettle(){n.on("settle",settle)}function play(t){typeof t!=="undefined"&&(s=t);startAutoScroll()}function stop(){i&&stopAutoScroll()}function reset(){if(i){stopAutoScroll();startAutoScrollOnSettle()}}function isPlaying(){return i}const a={name:"autoScroll",options:o,init:init,destroy:destroy,play:play,stop:stop,reset:reset,isPlaying:isPlaying};return a}AutoScroll.globalOptions=void 0;export{AutoScroll as default};

