// embla-carousel-autoplay@8.6.0 downloaded from https://ga.jspm.io/npm:embla-carousel-autoplay@8.6.0/esm/embla-carousel-autoplay.esm.js

const t={active:true,breakpoints:{},delay:4e3,jump:false,playOnInit:true,stopOnFocusIn:true,stopOnInteraction:true,stopOnMouseEnter:false,stopOnLastSnap:false,rootNode:null};function normalizeDelay(t,n){const e=t.scrollSnapList();return typeof n==="number"?e.map((()=>n)):n(e,t)}function getAutoplayRootNode(t,n){const e=t.rootNode();return n&&n(e)||e}function Autoplay(n={}){let e;let o;let i;let s;let a=null;let l=0;let r=false;let u=false;let p=false;let c=false;function init(a,l){o=a;const{mergeOptions:r,optionsAtMedia:u}=l;const p=r(t,Autoplay.globalOptions);const y=r(p,n);e=u(y);if(o.scrollSnapList().length<=1)return;c=e.jump;i=false;s=normalizeDelay(o,e.delay);const{eventStore:f,ownerDocument:d}=o.internalEngine();const m=!!o.internalEngine().options.watchDrag;const A=getAutoplayRootNode(o,e.rootNode);f.add(d,"visibilitychange",visibilityChange);m&&o.on("pointerDown",pointerDown);m&&!e.stopOnInteraction&&o.on("pointerUp",pointerUp);e.stopOnMouseEnter&&f.add(A,"mouseenter",mouseEnter);e.stopOnMouseEnter&&!e.stopOnInteraction&&f.add(A,"mouseleave",mouseLeave);e.stopOnFocusIn&&o.on("slideFocusStart",stopAutoplay);e.stopOnFocusIn&&!e.stopOnInteraction&&f.add(o.containerNode(),"focusout",startAutoplay);e.playOnInit&&startAutoplay()}function destroy(){o.off("pointerDown",pointerDown).off("pointerUp",pointerUp).off("slideFocusStart",stopAutoplay);stopAutoplay();i=true;r=false}function setTimer(){const{ownerWindow:t}=o.internalEngine();t.clearTimeout(l);l=t.setTimeout(next,s[o.selectedScrollSnap()]);a=(new Date).getTime();o.emit("autoplay:timerset")}function clearTimer(){const{ownerWindow:t}=o.internalEngine();t.clearTimeout(l);l=0;a=null;o.emit("autoplay:timerstopped")}function startAutoplay(){if(!i)if(documentIsHidden())p=true;else{r||o.emit("autoplay:play");setTimer();r=true}}function stopAutoplay(){if(!i){r&&o.emit("autoplay:stop");clearTimer();r=false}}function visibilityChange(){if(documentIsHidden()){p=r;return stopAutoplay()}p&&startAutoplay()}function documentIsHidden(){const{ownerDocument:t}=o.internalEngine();return t.visibilityState==="hidden"}function pointerDown(){u||stopAutoplay()}function pointerUp(){u||startAutoplay()}function mouseEnter(){u=true;stopAutoplay()}function mouseLeave(){u=false;startAutoplay()}function play(t){typeof t!=="undefined"&&(c=t);startAutoplay()}function stop(){r&&stopAutoplay()}function reset(){r&&startAutoplay()}function isPlaying(){return r}function next(){const{index:t}=o.internalEngine();const n=t.clone().add(1).get();const i=o.scrollSnapList().length-1;const s=e.stopOnLastSnap&&n===i;o.canScrollNext()?o.scrollNext(c):o.scrollTo(0,c);o.emit("autoplay:select");if(s)return stopAutoplay();startAutoplay()}function timeUntilNext(){if(!a)return null;const t=s[o.selectedScrollSnap()];const n=(new Date).getTime()-a;return t-n}const y={name:"autoplay",options:n,init:init,destroy:destroy,play:play,stop:stop,reset:reset,isPlaying:isPlaying,timeUntilNext:timeUntilNext};return y}Autoplay.globalOptions=void 0;export{Autoplay as default};

